syntax = "proto3";
package minecpp.proto.service.chunk_storage.v1;

import "minecpp/proto/chunk/v1/Chunk.proto";
import "minecpp/proto/common/v1/Common.proto";

service ChunkStorage {
  rpc LoadChunk (LoadChunkRequest) returns (chunk.v1.Chunk);
  rpc SetBlock (SetBlockRequest) returns (EmptyResponse);
  rpc AddReferences (AddReferencesRequest) returns (AddReferencesResponse);
  rpc RemoveReference (RemoveReferencesRequest) returns (EmptyResponse);
  rpc HeightAt (HeightAtRequest) returns (HeightAtResponse);
  rpc GetBlock (common.v1.BlockPosition) returns (common.v1.BlockState);
  rpc GetLightLevel (GetLightLevelRequest) returns (common.v1.LightLevel);
  rpc SetLightLevel (SetLightLevelRequest) returns (EmptyResponse);
}

message LoadChunkRequest {
  int32 x = 1;
  int32 z = 2;
}

message SetBlockRequest {
  int32 x = 1;
  int32 y = 2;
  int32 z = 3;
  int32 state = 4;
}

message Coord {
  int32 x = 1;
  int32 z = 2;
}

message AddReferencesRequest {
  bytes engine_id = 1;
  bytes player_id = 2;
  repeated Coord coords = 3;
}

enum ReferenceStatus {
  OK = 0;
  MUST_MOVE = 1;
}

message AddReferencesResponse {
  ReferenceStatus status = 1;
  bytes target_engine_id = 2;
}

message RemoveReferencesRequest {
  bytes player_id = 1;
  repeated Coord coords = 2;
}

message HeightAtRequest {
  int32 x = 1;
  int32 z = 2;
}

message HeightAtResponse {
  int32 height = 1;
}

message SetLightLevelRequest {
  common.v1.LightType light_type = 1;
  common.v1.BlockPosition position = 2;
  common.v1.LightLevel level = 3;
}

message GetLightLevelRequest {
  common.v1.LightType light_type = 1;
  common.v1.BlockPosition position = 2;
}

message EmptyResponse {
}